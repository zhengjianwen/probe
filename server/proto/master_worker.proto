syntax = "proto3";

service MasterWorker {
    rpc Subscribe (stream Topic) returns (stream Task) {}
}

message Topic {
    enum type {
        _ = 0;
        CONNECT = 1;
        RESULT = 2;
        HEALTH_REPORT = 3;
    }

    type        Type =  1;
    int64       WorkerId = 2;
    int64       WorkerTime = 3; // a worker health check local time
    taskResult  result = 4;
}

message Task {
    BasicInfo       BasicInfo = 1;
    HttpSpec        HttpSpec = 2;
    DnsSpec         DnsSpec = 3;
    PingSpec        PingSpec = 4;
    TraceRouteSpec  TracerouteSpec = 5;
    TcpSpec         TcpSpec = 6;
    UdpSpec         UdpSpec = 7;
    FtpSpec         FtpSpec = 8;
}

enum TaskType {
    _ = 0;
    UNHEALTH_CHECK = 1;
    HTTP = 2;
    DNS = 3;
    PING = 4;
    TRACE_ROUTE = 5;
    TCP = 6;
    UDP = 7;
    FTP = 8;
}

message BasicInfo {
    int64           Id = 1;
    int64           OrgId = 2;
    TaskType        Type = 3;
    string          Name = 4;
    string          Version = 5;
    int64           CreateTime = 6;
    int64           UpdateTime = 7;
    int64           ExecuteTime = 8;
    int64           ScheduleTime = 9;
    int64           PeriodSec = 10;
    repeated int64  RuleIds = 11;
}

message taskResult {
    enum code {
        _ = 0;
        OK = 1;
        ERR_HTTP_NEW_REQUEST = 2;
        ERR_HTTP_DO_REQUEST = 3;
        ERR_HTTP_READ_BODY = 4;
        ERR_HTTP_STATUS_CODE_UNMATCH = 5;
        ERR_HTTP_HEAD_UNMATCH = 6;
        ERR_HTTP_BODY_UNMATCH = 7;
        ERR_HTTP_TIMEOUT = 8;
        ERR_HTTP_OTHER = 9;
        ERR_NET_DIAL = 10;
        ERR_UDP_REQUEST = 11;
        ERR_UDP_RESPONSE = 12;
        ERR_UDP_RESPONSE_UNMATCH = 13;
        ERR_FTP_UNAUTHORIZED = 14;
    }
    int64       TaskId = 1;
    TaskType    Type = 2;
    bool        Success = 3;
    code        ErrorCode = 4;
    string      Error = 5;
    int64       ScheduleTime = 6; //master 派发任务的时间，这个时间充当执行任务ID
    int64       StartMs = 7; //worker 接受到task后执行的时间
    int64       DelayMs = 8; //worker 执行task所花费的时间
    int64       PeriodSec = 9; // 用户定义的任务执行周期, 单位 秒
    ping        Ping = 10;
    traceroute  Traceroute = 11;
    http        Http = 12;

    message http {
        uint32 StatusCode = 1;
    }

    message ping {
        uint32 lost  = 1;
    }

    message traceroute {
        int32 Hops = 1;
        int32 ErrHops = 2;
    }
}

message HttpSpec {
    enum method {
        __ = 0;
        GET = 1;
        POST = 2;
        HEAD = 3;
    }
    message matcher {
        enum target {
            ___ = 0;
            BODY = 1;
            HEAD = 2;
        }
        enum method {
            _____ = 0;
            INCLUDE = 1;
            EXCLUDE = 2;
        }
        target  Target = 1;
        method  Method = 2;
        string  Content = 3;
        int32   StatusCode = 4;
    }
    message basicAuth {
        string User = 1;
        string Passwd = 2;
    }

    string              Url = 1;
    method              Method = 2;
    map<string, string> header = 3;
    string              Cookies = 4;
    basicAuth           BasicAuth = 5;
    bytes               Body = 6;
    bool                IsBodyStr = 7;
    string              ServerIp = 8;
    matcher             Matcher = 9;
}

message DnsSpec {
    enum type {
        _____ = 0;
        A = 1;
        MX = 2;
        NS = 3;
        CNAME = 4;
        TXT = 5;
        ANY = 6;
    }

    string          Domain = 1;
    type            Type = 2;
    bool            IfMatchIp = 3; // Type=A
    repeated string MatchIps = 4;
    bool            IfMatchDomain = 5; // Type=NS
    repeated string MatchDomains = 6;
    bool            ServerDesigned = 7; //common option
    string          DNSServer = 8;
}

message PingSpec {
    string Destination = 1;
    int32  Count = 2;
    int32  Timeout = 3; //second
}

message TraceRouteSpec {
    string Destination = 1;
}

message TcpSpec {
    string Host = 1;
    int32  Port = 2;
}

message UdpSpec {
    string Host = 1;
    int32  Port = 2;
    enum format {
        _ = 0;
        BINARY = 1;
        TEXT = 2;
    }

    format ReqFormat = 3;
    string ReqContent = 4;
    format ResFormat = 5;
    string ResMatchContent = 6;
}

message FtpSpec {
    string      Host = 1;
    int32       Port = 2;
    bool        IfAuth = 3;
    auth        Auth = 4;
    message auth {
        string User = 1;
        string Passwd = 2;
    }
}